failed to get console mode for stdout: The handle is invalid.
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::ENTER;size(input.part[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.part[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::ENTER;size(input.id[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.id[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.contentRating.djctqRatingReasons == return.suggestions.editorSuggestions;daikon.inv.binary.twoScalar.IntEqual;(return.contentDetails.contentRating.djctqRatingReasons, return.suggestions.editorSuggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.contentRating.fpbRatingReasons == return.suggestions.editorSuggestions;daikon.inv.binary.twoScalar.IntEqual;(return.contentDetails.contentRating.fpbRatingReasons, return.suggestions.editorSuggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.countryRestriction.exception == return.suggestions.editorSuggestions;daikon.inv.binary.twoScalar.IntEqual;(return.contentDetails.countryRestriction.exception, return.suggestions.editorSuggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.hasCustomThumbnail == return.contentDetails.licensedContent;daikon.inv.binary.twoScalar.IntEqual;(return.contentDetails.hasCustomThumbnail, return.contentDetails.licensedContent)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.monetizationDetails.access.exception == return.suggestions.editorSuggestions;daikon.inv.binary.twoScalar.IntEqual;(return.monetizationDetails.access.exception, return.suggestions.editorSuggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.high.width == return.snippet.thumbnails.standard.height;daikon.inv.binary.twoScalar.IntEqual;(return.snippet.thumbnails.high.width, return.snippet.thumbnails.standard.height)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.commentCount == return.statistics.dislikeCount;daikon.inv.binary.twoString.StringEqual;(return.statistics.commentCount, return.statistics.dislikeCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.dislikeCount == return.statistics.favoriteCount;daikon.inv.binary.twoString.StringEqual;(return.statistics.dislikeCount, return.statistics.favoriteCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.dislikeCount == return.statistics.likeCount;daikon.inv.binary.twoString.StringEqual;(return.statistics.dislikeCount, return.statistics.likeCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.status.madeForKids == return.status.selfDeclaredMadeForKids;daikon.inv.binary.twoScalar.IntEqual;(return.status.madeForKids, return.status.selfDeclaredMadeForKids)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.editorSuggestions == return.suggestions.processingErrors;daikon.inv.binary.twoScalar.IntEqual;(return.suggestions.editorSuggestions, return.suggestions.processingErrors)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.editorSuggestions == return.suggestions.processingHints;daikon.inv.binary.twoScalar.IntEqual;(return.suggestions.editorSuggestions, return.suggestions.processingHints)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.editorSuggestions == return.suggestions.processingWarnings;daikon.inv.binary.twoScalar.IntEqual;(return.suggestions.editorSuggestions, return.suggestions.processingWarnings)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.editorSuggestions == return.topicDetails.relevantTopicIds;daikon.inv.binary.twoScalar.IntEqual;(return.suggestions.editorSuggestions, return.topicDetails.relevantTopicIds)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.editorSuggestions == return.topicDetails.topicIds;daikon.inv.binary.twoScalar.IntEqual;(return.suggestions.editorSuggestions, return.topicDetails.topicIds)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.ageGating == null;daikon.inv.unary.scalar.OneOfScalar;(return.ageGating)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.caption one of { "false", "true" };daikon.inv.unary.string.OneOfString;(return.contentDetails.caption)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.contentRating.ytRating == "ytAgeRestricted";daikon.inv.unary.string.OneOfString;(return.contentDetails.contentRating.ytRating)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.contentDetails.contentRating.ytRating)==15;daikon.inv.unary.string.FixedLengthString;(return.contentDetails.contentRating.ytRating)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.countryRestriction == null;daikon.inv.unary.scalar.OneOfScalar;(return.contentDetails.countryRestriction)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.definition one of { "hd", "sd" };daikon.inv.unary.string.OneOfString;(return.contentDetails.definition)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.contentDetails.definition)==2;daikon.inv.unary.string.FixedLengthString;(return.contentDetails.definition)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.dimension one of { "2d", "3d" };daikon.inv.unary.string.OneOfString;(return.contentDetails.dimension)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.contentDetails.dimension)==2;daikon.inv.unary.string.FixedLengthString;(return.contentDetails.dimension)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.hasCustomThumbnail == false;daikon.inv.unary.scalar.OneOfScalar;(return.contentDetails.hasCustomThumbnail)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.contentDetails.projection one of { "360", "rectangular" };daikon.inv.unary.string.OneOfString;(return.contentDetails.projection)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;All the elements of return.contentDetails.regionRestriction.allowed[] have LENGTH=2;daikon.inv.unary.stringsequence.SequenceFixedLengthString;(return.contentDetails.regionRestriction.allowed[..])
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;All the elements of return.contentDetails.regionRestriction.blocked[] have LENGTH=2;daikon.inv.unary.stringsequence.SequenceFixedLengthString;(return.contentDetails.regionRestriction.blocked[..])
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.etag)==27;daikon.inv.unary.string.FixedLengthString;(return.etag)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.fileDetails == null;daikon.inv.unary.scalar.OneOfScalar;(return.fileDetails)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.fileDetails.audioStreams == null;daikon.inv.unary.scalar.OneOfScalar;(return.fileDetails.audioStreams)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.fileDetails.videoStreams == null;daikon.inv.unary.scalar.OneOfScalar;(return.fileDetails.videoStreams)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.id)==11;daikon.inv.unary.string.FixedLengthString;(return.id)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.kind == "youtube#video";daikon.inv.unary.string.OneOfString;(return.kind)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.kind)==13;daikon.inv.unary.string.FixedLengthString;(return.kind)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.liveStreamingDetails.activeLiveChatId)==75;daikon.inv.unary.string.FixedLengthString;(return.liveStreamingDetails.activeLiveChatId)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.liveStreamingDetails.actualEndTime)==20;daikon.inv.unary.string.FixedLengthString;(return.liveStreamingDetails.actualEndTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.liveStreamingDetails.actualEndTime is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.liveStreamingDetails.actualEndTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.liveStreamingDetails.actualStartTime)==20;daikon.inv.unary.string.FixedLengthString;(return.liveStreamingDetails.actualStartTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.liveStreamingDetails.actualStartTime is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.liveStreamingDetails.actualStartTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.liveStreamingDetails.concurrentViewers is Numeric;daikon.inv.unary.string.IsNumeric;(return.liveStreamingDetails.concurrentViewers)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.liveStreamingDetails.scheduledEndTime)==20;daikon.inv.unary.string.FixedLengthString;(return.liveStreamingDetails.scheduledEndTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.liveStreamingDetails.scheduledEndTime is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.liveStreamingDetails.scheduledEndTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.liveStreamingDetails.scheduledStartTime)==20;daikon.inv.unary.string.FixedLengthString;(return.liveStreamingDetails.scheduledStartTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.liveStreamingDetails.scheduledStartTime is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.liveStreamingDetails.scheduledStartTime)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.monetizationDetails == null;daikon.inv.unary.scalar.OneOfScalar;(return.monetizationDetails)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.monetizationDetails.access == null;daikon.inv.unary.scalar.OneOfScalar;(return.monetizationDetails.access)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.player.embedHeight is Numeric;daikon.inv.unary.string.IsNumeric;(return.player.embedHeight)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.player.embedWidth is Numeric;daikon.inv.unary.string.IsNumeric;(return.player.embedWidth)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.processingDetails == null;daikon.inv.unary.scalar.OneOfScalar;(return.processingDetails)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.processingDetails.processingProgress == null;daikon.inv.unary.scalar.OneOfScalar;(return.processingDetails.processingProgress)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.projectDetails == null;daikon.inv.unary.scalar.OneOfScalar;(return.projectDetails)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.recordingDetails.location.altitude == 0.0;daikon.inv.unary.scalar.OneOfFloat;(return.recordingDetails.location.altitude)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.recordingDetails.recordingDate)==20;daikon.inv.unary.string.FixedLengthString;(return.recordingDetails.recordingDate)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.recordingDetails.recordingDate is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.recordingDetails.recordingDate)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.categoryId is Numeric;daikon.inv.unary.string.IsNumeric;(return.snippet.categoryId)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.snippet.channelId)==24;daikon.inv.unary.string.FixedLengthString;(return.snippet.channelId)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.liveBroadcastContent one of { "live", "none", "upcoming" };daikon.inv.unary.string.OneOfString;(return.snippet.liveBroadcastContent)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.snippet.publishedAt)==20;daikon.inv.unary.string.FixedLengthString;(return.snippet.publishedAt)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.publishedAt is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional);daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm;(return.snippet.publishedAt)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.default.height == 90;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.default.height)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.default.url is Url;daikon.inv.unary.string.IsUrl;(return.snippet.thumbnails.default.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.default.width == 120;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.default.width)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.high.height == 360;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.high.height)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.high.url is Url;daikon.inv.unary.string.IsUrl;(return.snippet.thumbnails.high.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.high.width == 480;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.high.width)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.maxres.height == 720;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.maxres.height)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.maxres.url is Url;daikon.inv.unary.string.IsUrl;(return.snippet.thumbnails.maxres.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.maxres.width == 1280;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.maxres.width)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.medium.height == 180;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.medium.height)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.medium.url is Url;daikon.inv.unary.string.IsUrl;(return.snippet.thumbnails.medium.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.medium.width == 320;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.medium.width)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.standard.height == 480;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.standard.height)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.standard.url is Url;daikon.inv.unary.string.IsUrl;(return.snippet.thumbnails.standard.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.snippet.thumbnails.standard.width == 640;daikon.inv.unary.scalar.OneOfScalar;(return.snippet.thumbnails.standard.width)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.commentCount is Numeric;daikon.inv.unary.string.IsNumeric;(return.statistics.commentCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.dislikeCount == "0";daikon.inv.unary.string.OneOfString;(return.statistics.dislikeCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.statistics.dislikeCount)==1;daikon.inv.unary.string.FixedLengthString;(return.statistics.dislikeCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.dislikeCount is Numeric;daikon.inv.unary.string.IsNumeric;(return.statistics.dislikeCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.favoriteCount == "0";daikon.inv.unary.string.OneOfString;(return.statistics.favoriteCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;LENGTH(return.statistics.favoriteCount)==1;daikon.inv.unary.string.FixedLengthString;(return.statistics.favoriteCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.favoriteCount is Numeric;daikon.inv.unary.string.IsNumeric;(return.statistics.favoriteCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.likeCount is Numeric;daikon.inv.unary.string.IsNumeric;(return.statistics.likeCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.statistics.viewCount is Numeric;daikon.inv.unary.string.IsNumeric;(return.statistics.viewCount)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.status.license one of { "creativeCommon", "youtube" };daikon.inv.unary.string.OneOfString;(return.status.license)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.status.privacyStatus one of { "private", "public", "unlisted" };daikon.inv.unary.string.OneOfString;(return.status.privacyStatus)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.status.uploadStatus one of { "processed", "uploaded" };daikon.inv.unary.string.OneOfString;(return.status.uploadStatus)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions == null;daikon.inv.unary.scalar.OneOfScalar;(return.suggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.editorSuggestions == null;daikon.inv.unary.scalar.OneOfScalar;(return.suggestions.editorSuggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.suggestions.tagSuggestions == null;daikon.inv.unary.scalar.OneOfScalar;(return.suggestions.tagSuggestions)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;All the elements of return.topicDetails.topicCategories[] are URLs;daikon.inv.unary.stringsequence.SequenceStringElementsAreUrl;(return.topicDetails.topicCategories[..])
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;size(input.part[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.part[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;size(input.id[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.id[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;size(return.contentDetails.regionRestriction.allowed[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(return.contentDetails.regionRestriction.allowed[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;size(return.contentDetails.regionRestriction.blocked[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(return.contentDetails.regionRestriction.blocked[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;size(return.snippet.tags[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(return.snippet.tags[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;size(return.topicDetails.topicCategories[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(return.topicDetails.topicCategories[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id in input.id[];daikon.inv.binary.sequenceString.MemberString;(input.id[..], return.id)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;input.maxHeight > size(return.contentDetails.regionRestriction.blocked[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.maxHeight, size(return.contentDetails.regionRestriction.blocked[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;input.maxHeight > size(return.snippet.tags[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.maxHeight, size(return.snippet.tags[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;input.maxWidth > size(return.contentDetails.regionRestriction.allowed[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.maxWidth, size(return.contentDetails.regionRestriction.allowed[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;input.maxWidth > size(return.contentDetails.regionRestriction.blocked[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.maxWidth, size(return.contentDetails.regionRestriction.blocked[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;input.maxWidth > size(return.snippet.tags[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.maxWidth, size(return.snippet.tags[..]))
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id is a substring of return.player.embedHtml;daikon.inv.binary.twoString.StdString$SubString;(return.id, return.player.embedHtml)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id is a substring of return.snippet.thumbnails.default.url;daikon.inv.binary.twoString.StdString$SubString;(return.id, return.snippet.thumbnails.default.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id is a substring of return.snippet.thumbnails.high.url;daikon.inv.binary.twoString.StdString$SubString;(return.id, return.snippet.thumbnails.high.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id is a substring of return.snippet.thumbnails.maxres.url;daikon.inv.binary.twoString.StdString$SubString;(return.id, return.snippet.thumbnails.maxres.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id is a substring of return.snippet.thumbnails.medium.url;daikon.inv.binary.twoString.StdString$SubString;(return.id, return.snippet.thumbnails.medium.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.id is a substring of return.snippet.thumbnails.standard.url;daikon.inv.binary.twoString.StdString$SubString;(return.id, return.snippet.thumbnails.standard.url)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.player.embedHeight is a substring of return.player.embedHtml;daikon.inv.binary.twoString.StdString$SubString;(return.player.embedHeight, return.player.embedHtml)
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT;return.player.embedWidth is a substring of return.player.embedHtml;daikon.inv.binary.twoString.StdString$SubString;(return.player.embedHtml, return.player.embedWidth)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::ENTER;size(input.part[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.part[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::ENTER;size(input.id[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.id[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;input.maxResults == return.pageInfo.resultsPerPage;daikon.inv.binary.twoScalar.IntEqual;(input.maxResults, return.pageInfo.resultsPerPage)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;LENGTH(return.etag)==27;daikon.inv.unary.string.FixedLengthString;(return.etag)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.kind == "youtube#videoListResponse";daikon.inv.unary.string.OneOfString;(return.kind)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;LENGTH(return.kind)==25;daikon.inv.unary.string.FixedLengthString;(return.kind)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;LENGTH(return.nextPageToken)==6;daikon.inv.unary.string.FixedLengthString;(return.nextPageToken)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.pageInfo.resultsPerPage >= 0;daikon.inv.unary.scalar.LowerBound;(return.pageInfo.resultsPerPage)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.pageInfo.totalResults >= 0;daikon.inv.unary.scalar.LowerBound;(return.pageInfo.totalResults)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.tokenPagination == null;daikon.inv.unary.scalar.OneOfScalar;(return.tokenPagination)
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;size(input.part[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.part[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;size(input.id[]) >= 1;daikon.inv.unary.scalar.LowerBound;(size(input.id[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;input.maxResults >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(input.maxResults, size(return.items[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.pageInfo.resultsPerPage <= size(input.id[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.pageInfo.resultsPerPage, size(input.id[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.pageInfo.resultsPerPage >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageInfo.resultsPerPage, size(return.items[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.pageInfo.totalResults <= size(input.id[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.pageInfo.totalResults, size(input.id[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;return.pageInfo.totalResults >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageInfo.totalResults, size(return.items[..]))
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT;size(input.id[]) >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(input.id[..]), size(return.items[..]))
